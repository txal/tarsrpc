module taf
{

//压缩维度后的模块间调用包头 Mic = module interval call
struct StatCountHead
{
	  0 require string date;             //日期
	  1 require string tflag;            //时间
      2 require string masterName;       //主调模块name
      3 require string slaveName;        //被调模块name
      4 require string slaveIp;          //被调ip
      5 optional string interfaceName;    //被调模块接口name
};

key[StatCountHead, date, tflag, masterName, slaveName, slaveIp, interfaceName];
   
//压缩维度后的模块间调用包体协议
struct StatCountBody
{
      0 require int count;               //成功调用量
      1 require int timeoutCount;        //超时调用量
      2 require int execCount;           //异常调用量
      3 require long totalRspTime;       //调用总时间用来计算平均时间
      4 require bool flag = false;		 //信息标志
      5 optional map<long, int> retValue;   //统计接口的返回值，当自动扩容灰度节点时，会用到
};

struct StatCountData
{
      0 require StatCountHead head;           //压缩维度后的模块间调用信息头
      1 require StatCountBody body;           //压缩维度后的模块间调用信息体
};

/**
 *
 * 查询的接口
 *
 **/
interface StatCountServant
{      
      /**
      * 上报压缩维度后的stat信息
      * @param data, 压缩维度后的stat信息
      * @return int, 返回0表示成功
      */
      int reportStatCountData(StatCountData data);
};

}; 
