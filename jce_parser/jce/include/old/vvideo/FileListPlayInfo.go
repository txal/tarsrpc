// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.0.0.29 by WSRD Tencent.
// Generated from `./module/old.jce'
// **********************************************************************

package vvideo
import "reflect"
import "yytars/jce_parser/gojce"

type FileListPlayInfo struct {
    M_vid string
    M_title string
    M_type int32
    M_status int32
    M_duration int32
    M_uin int64
    M_vuid int64
    M_deliverMethod int32
}

func (_obj *FileListPlayInfo) resetDefault() {
    _obj.M_vid = ""
    _obj.M_title = ""
    _obj.M_type = 0
    _obj.M_status = 0
    _obj.M_duration = 0
    _obj.M_uin = 0
    _obj.M_vuid = 0
    _obj.M_deliverMethod = 0
}

func (_obj *FileListPlayInfo) WriteTo(_os gojce.JceOutputStream) error {
    var _err error
    if _err = _os.Write(reflect.ValueOf(&_obj.M_vid), 1); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.M_title), 2); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.M_type), 3); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.M_status), 4); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.M_duration), 5); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.M_uin), 6); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.M_vuid), 7); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.M_deliverMethod), 8); _err != nil {
        return _err
    }
    return nil
}

func (_obj *FileListPlayInfo) ReadFrom(_is gojce.JceInputStream) error {
    var _err error
    var _i interface{}
    _obj.resetDefault()
    _i, _err = _is.Read(reflect.TypeOf(_obj.M_vid), 1, true)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.M_vid = _i.(string)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.M_title), 2, true)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.M_title = _i.(string)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.M_type), 3, true)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.M_type = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.M_status), 4, true)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.M_status = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.M_duration), 5, true)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.M_duration = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.M_uin), 6, true)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.M_uin = _i.(int64)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.M_vuid), 7, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.M_vuid = _i.(int64)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.M_deliverMethod), 8, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.M_deliverMethod = _i.(int32)
    }
    return nil
}

func (_obj *FileListPlayInfo) Display(_ds gojce.JceDisplayer) {
    _ds.Display(reflect.ValueOf(&_obj.M_vid), "vid")
    _ds.Display(reflect.ValueOf(&_obj.M_title), "title")
    _ds.Display(reflect.ValueOf(&_obj.M_type), "type")
    _ds.Display(reflect.ValueOf(&_obj.M_status), "status")
    _ds.Display(reflect.ValueOf(&_obj.M_duration), "duration")
    _ds.Display(reflect.ValueOf(&_obj.M_uin), "uin")
    _ds.Display(reflect.ValueOf(&_obj.M_vuid), "vuid")
    _ds.Display(reflect.ValueOf(&_obj.M_deliverMethod), "deliverMethod")
}

